// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package proto

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Users struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Users) Reset()         { *m = Users{} }
func (m *Users) String() string { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()    {}
func (*Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Users.Unmarshal(m, b)
}
func (m *Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Users.Marshal(b, m, deterministic)
}
func (m *Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Users.Merge(m, src)
}
func (m *Users) XXX_Size() int {
	return xxx_messageInfo_Users.Size(m)
}
func (m *Users) XXX_DiscardUnknown() {
	xxx_messageInfo_Users.DiscardUnknown(m)
}

var xxx_messageInfo_Users proto.InternalMessageInfo

func (m *Users) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type User struct {
	// Types that are valid to be assigned to Status:
	//	*User_IsNew
	//	*User_Id
	Status               isUser_Status `protobuf_oneof:"status"`
	Name                 string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                string        `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Password             string        `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

type isUser_Status interface {
	isUser_Status()
}

type User_IsNew struct {
	IsNew bool `protobuf:"varint,1,opt,name=is_new,json=isNew,proto3,oneof"`
}

type User_Id struct {
	Id int64 `protobuf:"varint,2,opt,name=id,proto3,oneof"`
}

func (*User_IsNew) isUser_Status() {}

func (*User_Id) isUser_Status() {}

func (m *User) GetStatus() isUser_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *User) GetIsNew() bool {
	if x, ok := m.GetStatus().(*User_IsNew); ok {
		return x.IsNew
	}
	return false
}

func (m *User) GetId() int64 {
	if x, ok := m.GetStatus().(*User_Id); ok {
		return x.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*User) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*User_IsNew)(nil),
		(*User_Id)(nil),
	}
}

type Result struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	User                 *User    `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

func (m *Result) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*Users)(nil), "proto.Users")
	proto.RegisterType((*User)(nil), "proto.User")
	proto.RegisterType((*Result)(nil), "proto.Result")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x8f, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x86, 0x9b, 0xee, 0x26, 0xac, 0x53, 0x05, 0x19, 0x04, 0x43, 0x2f, 0xae, 0xab, 0x94, 0xa5,
	0x48, 0x0f, 0xf5, 0x07, 0x08, 0x56, 0xb1, 0x27, 0x0f, 0x01, 0xcf, 0x12, 0xd9, 0x39, 0x04, 0xb6,
	0x1f, 0xe4, 0xc3, 0x9e, 0xfd, 0xe5, 0x4a, 0x12, 0x11, 0xf1, 0xb2, 0x9e, 0x92, 0x27, 0xef, 0xc3,
	0xcc, 0x1b, 0x80, 0xe0, 0xc8, 0x2e, 0xf6, 0x76, 0xe7, 0x77, 0xc8, 0xd3, 0xd1, 0xcc, 0x81, 0xbf,
	0x38, 0xb2, 0x0e, 0x2f, 0x81, 0xc7, 0xd4, 0x49, 0x56, 0x17, 0xed, 0x64, 0x39, 0xc9, 0xda, 0x22,
	0x86, 0x2a, 0x27, 0xcd, 0x07, 0x83, 0x32, 0x32, 0x9e, 0x83, 0x30, 0xee, 0x75, 0x4b, 0x07, 0xc9,
	0x6a, 0xd6, 0x56, 0xeb, 0x91, 0xe2, 0xc6, 0x3d, 0xd3, 0x01, 0x4f, 0x61, 0x6c, 0x3a, 0x39, 0xae,
	0x59, 0x5b, 0xac, 0x47, 0x6a, 0x6c, 0x3a, 0x44, 0x28, 0xb7, 0x7a, 0x43, 0xb2, 0xa8, 0x59, 0x7b,
	0xa4, 0xd2, 0x1d, 0xcf, 0x80, 0xd3, 0x46, 0x9b, 0x5e, 0x96, 0xe9, 0x31, 0x03, 0x4e, 0xa1, 0xda,
	0x6b, 0xe7, 0x0e, 0x3b, 0xdb, 0x49, 0x9e, 0x82, 0x1f, 0xbe, 0xaf, 0x40, 0x38, 0xaf, 0x7d, 0x70,
	0xcd, 0x1d, 0x08, 0x45, 0x2e, 0xf4, 0x3e, 0x4e, 0x79, 0xd7, 0x7d, 0xa0, 0xdc, 0x41, 0x65, 0xc0,
	0x0b, 0x28, 0x63, 0xd9, 0xd4, 0xe1, 0xcf, 0x2f, 0x52, 0xb0, 0xfc, 0x64, 0x50, 0x45, 0x5c, 0xd9,
	0xd0, 0xe1, 0x0c, 0xc4, 0xca, 0x92, 0xf6, 0x84, 0xbf, 0xcd, 0xe9, 0xc9, 0x37, 0xe4, 0x4d, 0xcd,
	0x08, 0x6f, 0xe0, 0x38, 0x7b, 0x8a, 0x7c, 0xb0, 0xdb, 0x01, 0xfb, 0x1a, 0xca, 0xc7, 0xce, 0xf8,
	0x01, 0x6b, 0x0e, 0x10, 0xad, 0x7f, 0x4d, 0x9c, 0x81, 0x78, 0xa0, 0x9e, 0x06, 0x7b, 0x5e, 0x41,
	0xf1, 0x44, 0x03, 0x8b, 0xdf, 0x44, 0xe2, 0xdb, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x6c,
	0x03, 0x67, 0x0e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserCrudClient is the client API for UserCrud service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserCrudClient interface {
	Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error)
	CreateReturn(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error)
	Edit(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error)
	EditReturn(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error)
	Delete(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error)
	Get(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error)
}

type userCrudClient struct {
	cc *grpc.ClientConn
}

func NewUserCrudClient(cc *grpc.ClientConn) UserCrudClient {
	return &userCrudClient{cc}
}

func (c *userCrudClient) Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/proto.UserCrud/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCrudClient) CreateReturn(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/proto.UserCrud/CreateReturn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCrudClient) Edit(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/proto.UserCrud/Edit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCrudClient) EditReturn(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/proto.UserCrud/EditReturn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCrudClient) Delete(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/proto.UserCrud/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCrudClient) Get(ctx context.Context, in *User, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/proto.UserCrud/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserCrudServer is the server API for UserCrud service.
type UserCrudServer interface {
	Create(context.Context, *User) (*Result, error)
	CreateReturn(context.Context, *User) (*Result, error)
	Edit(context.Context, *User) (*Result, error)
	EditReturn(context.Context, *User) (*Result, error)
	Delete(context.Context, *User) (*Result, error)
	Get(context.Context, *User) (*Result, error)
}

// UnimplementedUserCrudServer can be embedded to have forward compatible implementations.
type UnimplementedUserCrudServer struct {
}

func (*UnimplementedUserCrudServer) Create(ctx context.Context, req *User) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserCrudServer) CreateReturn(ctx context.Context, req *User) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReturn not implemented")
}
func (*UnimplementedUserCrudServer) Edit(ctx context.Context, req *User) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Edit not implemented")
}
func (*UnimplementedUserCrudServer) EditReturn(ctx context.Context, req *User) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditReturn not implemented")
}
func (*UnimplementedUserCrudServer) Delete(ctx context.Context, req *User) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedUserCrudServer) Get(ctx context.Context, req *User) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterUserCrudServer(s *grpc.Server, srv UserCrudServer) {
	s.RegisterService(&_UserCrud_serviceDesc, srv)
}

func _UserCrud_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrud/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServer).Create(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCrud_CreateReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServer).CreateReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrud/CreateReturn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServer).CreateReturn(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCrud_Edit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServer).Edit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrud/Edit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServer).Edit(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCrud_EditReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServer).EditReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrud/EditReturn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServer).EditReturn(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCrud_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrud/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServer).Delete(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCrud_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCrudServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCrud/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCrudServer).Get(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserCrud_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UserCrud",
	HandlerType: (*UserCrudServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserCrud_Create_Handler,
		},
		{
			MethodName: "CreateReturn",
			Handler:    _UserCrud_CreateReturn_Handler,
		},
		{
			MethodName: "Edit",
			Handler:    _UserCrud_Edit_Handler,
		},
		{
			MethodName: "EditReturn",
			Handler:    _UserCrud_EditReturn_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _UserCrud_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UserCrud_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
